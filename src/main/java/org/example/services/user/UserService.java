package org.example.services.user;

import org.example.utilClasses.User;

import java.util.List;

public interface UserService {
    /**
     * Чтение данных с консоли.
     * Проверка этих параметров.
     * Создание пользователя на основе проверенных параметров.
     * Отправка созданного пользователя в файл.
     */
    void create();

    /**
     * Считывает с консоли айди пользователя для удаления.
     * Получает лист пользователей без пользователя которого требуется удалить,
     * корректируя айди у всех пользователей.
     * Запись в файл.
     */
    void delete();

    /**
     * Возвращает список всех пользователей.
     *
     * @return Лист пользователей.
     */
    List<User> getAllUsers();

    /**
     * Возвращает пользователя по айди введеного с консоли.
     *
     * @return Пользователь с полученным айди.
     */
    User get();

    /**
     * Возвращает пользователя по id.
     *
     * @param id Айди пользователя.
     * @return Возвращаемый пользователь.
     */
    User getById(int id);


    /**
     * Считывает с консоли айди пользователя, которого требуется обновить.
     * Считывает с консоли что именно требуется сделать с пользователем.
     * Выполняется фукционал метода {@link org.example.services.user.UserServiceStreamImpl# updateByChoice(User, int) update}.
     */
    void update();


}